/**
 * 整数转罗马数字
 * 
 * 解题思路：
 * 1. 罗马数字的表示规则：
 *    - 基本符号：I(1), V(5), X(10), L(50), C(100), D(500), M(1000)
 *    - 特殊情况：4(IV), 9(IX), 40(XL), 90(XC), 400(CD), 900(CM)
 *    - 同一符号最多连续出现3次
 * 
 * 2. 转换策略：
 *    - 从大到小遍历所有可能的罗马数字值
 *    - 对于每个值，如果当前数字大于等于该值，就添加对应的罗马符号
 *    - 重复这个过程直到数字变为0
 * 
 * 3. 时间复杂度：O(1)，因为罗马数字的值是固定的
 *    空间复杂度：O(1)，只使用了固定大小的数组
 * 
 * @param {number} num - 需要转换的整数
 * @return {string} - 转换后的罗马数字字符串
 */
var intToRoman = function (num) {
  // 定义所有可能的罗马数字值（从大到小排序）
  const values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];
  
  // 对应的罗马数字符号
  const symbols = [
    "M",    // 1000
    "CM",   // 900
    "D",    // 500
    "CD",   // 400
    "C",    // 100
    "XC",   // 90
    "L",    // 50
    "XL",   // 40
    "X",    // 10
    "IX",   // 9
    "V",    // 5
    "IV",   // 4
    "I",    // 1
  ];

  // 存储最终的罗马数字结果
  let result = "";

  // 遍历所有可能的值
  for (let i = 0; i < values.length; i++) {
    // 只要当前数字大于等于当前值，就继续添加对应的罗马符号
    while (num >= values[i]) {
      result += symbols[i];
      num -= values[i];
    }
  }

  return result;
};
